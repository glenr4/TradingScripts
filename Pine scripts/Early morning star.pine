// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © GeminiAI

//@version=5
indicator("Early Morning Star", shorttitle="Early Morning Star", overlay=true)

// --- Input Parameters ---
i_htf = input.timeframe("30", "Higher Timeframe (HTF)")

i_maxC2BodyRatioC1 = input.float(50.0, "Max C2 Body % of C1", minval=1.0, maxval=100.0, step=5.0, tooltip="Maximum percentage the second candle's body can be relative to the first candle's body.")

i_alertMorningStar = input.bool(true, "Enable Morning Star Alert")
i_alertEveningStar = input.bool(true, "Enable Evening Star Alert")

// --- Helper Functions ---

// Calculates the absolute body size of a candle
f_getBodySize(candleOpen, candleClose) => math.abs(candleClose - candleOpen)

// Calculates the total range of a candle (high - low)
f_getRange(candleHigh, candleLow) => candleHigh - candleLow

// Checks if a candle is bullish
f_isBullish(candleOpen, candleClose) => candleClose > candleOpen

// Checks if a candle is bearish
f_isBearish(candleOpen, candleClose) => candleClose < candleOpen


// --- Get Higher Timeframe Data ---
// We use request.security with lookahead=barmerge.lookahead_on to get real-time HTF data,
// meaning the current HTF bar's OHLC values will update as the current (lower timeframe) bar progresses.
// This is crucial for detecting the third candle *while it is forming*.
[c1_open, c1_high, c1_low, c1_close] = request.security(syminfo.tickerid, i_htf, [open[2], high[2], low[2], close[2]], lookahead=barmerge.lookahead_on) // Candle 1 (2 HTF bars ago)
[c2_open, c2_high, c2_low, c2_close] = request.security(syminfo.tickerid, i_htf, [open[1], high[1], low[1], close[1]], lookahead=barmerge.lookahead_on) // Candle 2 (1 HTF bar ago)
[c3_open, c3_high, c3_low, c3_close] = request.security(syminfo.tickerid, i_htf, [open[0], high[0], low[0], close[0]], lookahead=barmerge.lookahead_on) // Candle 3 (Current HTF bar)

// --- Morning Star Pattern Detection ---
var bool morningStarDetected = false

// Conditions for Morning Star (simplified):
// Candle 1: Bearish candle
isC1Bearish = f_isBearish(c1_open, c1_close)

// Candle 2: Gapping down from C1's real body
isC2GapDown = true// math.max(c2_open, c2_close) < c1_close // C2 body (top) below C1 close (bottom of C1 body)

// Candle 2 relative to Candle 1's range
isC2LowerLow = c2_low < c1_low
isC2LowerHigh = c2_high < c1_high

// Maximum second candle body percentage of first
isC2BodySmallRelativeC1 = f_getBodySize(c2_open, c2_close) <= f_getBodySize(c1_open, c1_close) * (i_maxC2BodyRatioC1 / 100.0)

// Candle 3: Bullish candle
isC3BullishForming = f_isBullish(c3_open, c3_close)

// Candle 3 relative to Candle 2's range
isC3HigherLow = c3_low > c2_low


// Combine simplified conditions for Morning Star
morningStar = isC1Bearish and isC2GapDown and isC2LowerLow and isC2LowerHigh and isC2BodySmallRelativeC1 and isC3BullishForming and isC3HigherLow

// Detect morning star only when the current HTF bar is the one that completes the pattern
if morningStar and not morningStarDetected
    morningStarDetected := true
else if not morningStar and morningStarDetected
    morningStarDetected := false // Reset detection if pattern is no longer valid

// --- Evening Star Pattern Detection ---
var bool eveningStarDetected = false

// Conditions for Evening Star (simplified):
// Candle 1: Bullish candle
isC1Bullish = f_isBullish(c1_open, c1_close)

// Candle 2: Gapping up from C1's real body
isC2GapUp = math.min(c2_open, c2_close) > c1_close // C2 body (bottom) above C1 close (top of C1 body)

// Candle 2 relative to Candle 1's range
isC2HigherLow = c2_low > c1_low
isC2HigherHigh = c2_high > c1_high

// Maximum second candle body percentage of first
isC2BodySmallRelativeC1_ES = f_getBodySize(c2_open, c2_close) <= f_getBodySize(c1_open, c1_close) * (i_maxC2BodyRatioC1 / 100.0)

// Candle 3: Bearish candle
isC3BearishForming = f_isBearish(c3_open, c3_close)

// Candle 3 relative to Candle 2's range
isC3LowerHigh = c3_high < c2_high


// Combine simplified conditions for Evening Star
eveningStar = isC1Bullish and isC2GapUp and isC2HigherLow and isC2HigherHigh and isC2BodySmallRelativeC1_ES and isC3BearishForming and isC3LowerHigh

// Detect evening star only when the current HTF bar is the one that completes the pattern
if eveningStar and not eveningStarDetected
    eveningStarDetected := true
else if not eveningStar and eveningStarDetected
    eveningStarDetected := false // Reset detection if pattern is no longer valid

// --- Plotting and Alerts ---

// Plot Morning Star pattern
plotshape(morningStarDetected, style=shape.triangleup, location=location.belowbar, color=color.rgb(33, 150, 243, 80), size=size.small, title="Morning Star", text="MS")
plotshape(morningStarDetected, style=shape.labelup, location=location.belowbar, color=color.new(color.blue, 70), textcolor=color.white, size=size.small, title="Morning Star Label", text="Morning Star Pattern Forming!")

// Plot Evening Star pattern
plotshape(eveningStarDetected, style=shape.triangledown, location=location.abovebar, color=color.rgb(244, 67, 54, 80), size=size.small, title="Evening Star", text="ES")
plotshape(eveningStarDetected, style=shape.labeldown, location=location.abovebar, color=color.new(color.red, 70), textcolor=color.white, size=size.small, title="Evening Star Label", text="Evening Star Pattern Forming!")


// Alerts
alertcondition(morningStarDetected and i_alertMorningStar, title="Morning Star Alert", message="Morning Star pattern detected on {{ticker}} {{interval}}!")
alertcondition(eveningStarDetected and i_alertEveningStar, title="Evening Star Alert", message="Evening Star pattern detected on {{ticker}} {{interval}}!")
