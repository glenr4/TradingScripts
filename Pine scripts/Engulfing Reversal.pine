// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© glenrutherford4

//@version=5
indicator("Engulfing Reversal", overlay = true, max_boxes_count = 500)

bullishColour = input.color(color.rgb(76, 175, 80), title="Bullish Colour", group= "Appearance")
bearishColour = input.color(color.rgb(255, 82, 82), title="Bullish Colour", group= "Appearance")

isBullish(i) => close[i] > open[i]
isBearish(i) => close[i] < open[i]

isEngulfing(i) => high[i] > high[i+1] and low[i] < low[i+1]
isStrongBullishClose(i) => isBullish(i) and close[i] > high[i+1]
isStrongBearishClose(i) => isBearish(i) and close[i] < low[i+1]
isBullishEngulfing(i) => isBullish(i) and isEngulfing(i)
isBearishEngulfing(i) => isBearish(i) and isEngulfing(i)

plotshape(isBullishEngulfing(0) and isStrongBullishClose(0) and isBearish(1), style=shape.triangleup, location=location.belowbar, color=bullishColour, size=size.tiny)
plotshape(isBearishEngulfing(0) and isStrongBearishClose(0) and isBullish(1), style=shape.triangledown, location=location.abovebar, color=bearishColour, size=size.tiny)

// Large wick
enableLargeWickHighlight = input.bool(false, title="Enable Large Wick Highlight", group= "Large Wick")
avgPeriods = input.int(20, title="Average Periods", group= "Large Wick", minval = 0)
avgBodySizeMultiplier = input.float(1.2, title="Average Body Size Multiplier", group= "Large Wick", step=0.1, minval = 0)
minWickProportion = input.float(0.6, title="Minimum Wick Proportion", group= "Large Wick", step=0.1, minval = 0)

bullishHighlightColour = color.new(bullishColour, 50)
bearishHighlightColour = color.new(bearishColour, 50)

avgRange = ta.sma(high - low, avgPeriods)

isLargeRange(i) => 
    (high[i] - low[i]) > avgRange[i] * avgBodySizeMultiplier

fullRange(i) => high[i] - low[i]
upperWickSize(i) => high[i] - math.max(open[i], close[i])
lowerWickSize(i) => math.min(open[i], close[i]) - low[i]

isLargeBullishWick(i) => lowerWickSize(i) >= fullRange(i) * minWickProportion
isLargeBearishWick(i) => upperWickSize(i) >= fullRange(i) * minWickProportion

isBullishEngulfingLargeWick(i) => enableLargeWickHighlight and isBullishEngulfing(i) and isLargeBullishWick(i) and isLargeRange(i)
if(isBullishEngulfingLargeWick(0))
    box.new(bar_index - 1, high, bar_index + 1, low, bgcolor=bullishHighlightColour, border_color=bullishHighlightColour)

isBearishEngulfingLargeWick(i) => enableLargeWickHighlight and isBearishEngulfing(i) and isLargeBearishWick(i) and isLargeRange(i)
if(isBearishEngulfingLargeWick(0))
    box.new(bar_index - 1, high, bar_index + 1, low, bgcolor=bearishHighlightColour, border_color=bearishHighlightColour)

// Strategy
// enableStrategy = input.bool(1, title="Enable Strategy", group= "Strategy")
// closeNumberOfBars = input.int(20, title="Close Number of Bars", group= "Strategy", minval = 0)

// isBullishEntry = isBullishEngulfingLargeWick(0) and low <= ta.lowest(low, 20)
// var float lastBullishEntryBarLow = na

// if(enableStrategy)
//     if(isBullishEntry)  // If true on the day before
//         strategy.entry("Buy", strategy.long, 1)
//         lastBullishEntryBarLow := low

//     isBullishProfitTarget = strategy.position_size > 0 and ta.barssince(isBullishEntry) >= closeNumberOfBars
//     if(isBullishProfitTarget)
//         strategy.close("Buy")

//     isBullishStopLoss = strategy.position_size > 0 and close < lastBullishEntryBarLow
//     if(isBullishStopLoss)
//         strategy.close("Buy")   // Change this to a Stop order, using close() uses the close price of the signal bar which can be a much worse fill

// //plot(lastBullishEntryBarLow)