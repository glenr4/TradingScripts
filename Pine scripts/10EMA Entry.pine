// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© glenrutherford4

//@version=5
indicator("10EMA Entry", overlay = true)

import glenrutherford4/RollingVWAPLib/2 as rvwap

isBullish(i) =>
    close[i] > open[i]
isBearish(i) => 
    close[i] < open[i]

// Indiacators
ema = ta.ema(close, 10)
plot(ema, linewidth = 2, color = color.yellow)

rvwap1Day = rvwap.days(1)
plot(rvwap1Day, linewidth = 2, color = color.orange)

// Pivots
leftBars = input(2)
rightBars=input(2)
entryLookbackBars=input(4)
ph = ta.pivothigh(ema, leftBars, rightBars)
plot(ph, style=plot.style_cross, linewidth=3, color= color.red, offset=-rightBars)

pl = ta.pivotlow(ema, leftBars, rightBars)
plot(pl, style=plot.style_cross, linewidth=3, color= color.green, offset=-rightBars)

pivotLookback(pivot, rightBars, lookback) =>
    returnValue = false

    if lookback >= rightBars
        for i=0 to lookback - rightBars
            if(not na(pivot[i]))
                returnValue := true
                break
    returnValue

// Signals
bullishSignal = isBearish(0) and close >= ema
bearishSignal = isBullish(0) and close <= ema

// isBullishEntry = bullishSignal and pivotLookback(pl, rightBars, entryLookbackBars)
// isBearishEntry = bearishSignal and pivotLookback(ph, rightBars, entryLookbackBars)
isBullishEntry = bullishSignal and ema > rvwap1Day
isBearishEntry = bearishSignal and ema < rvwap1Day

plotshape(isBullishEntry, style=shape.triangleup, location=location.belowbar, color=color.blue, size=size.tiny)
plotshape(isBearishEntry, style=shape.triangledown, location=location.abovebar, color=color.blue, size=size.tiny)

alertcondition(isBullishEntry, "10EMA Bullish Entry", "10EMA bullish entry")
alertcondition(isBearishEntry, "10EMA Bearish Entry", "10EMA bearish entry")