// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© glenrutherford4

//@version=5
strategy("Vol Spike", overlay=true, margin_long=10, margin_short=10, max_lines_count = 500)
qty = input.float(100000, "Trade Size")
riskPoints = input.float(0.01500, "Risk (points)")
r2r = input.float(2.0, "Reward:Risk") 
avgRange = input.int(6, "Average Range")
avgVolumeThreshold = input.float(1.5, "Spike: multiples of average volume")
takeTradeWithinBarCount = input.int(3, "Take trade within bars")

useDateFilter = input.bool(true, title="Filter Date Range of Backtest",
     group="Backtest Time Period")
backtestStartDate = input.time(timestamp("1 Jan 2022"), 
     title="Start Date", group="Backtest Time Period",
     tooltip="This start date is in the time zone of the exchange " + 
     "where the chart's instrument trades. It doesn't use the time " + 
     "zone of the chart or of your computer.")
backtestEndDate = input.time( timestamp("31 Oct 2023"),
     title="End Date", group="Backtest Time Period",
     tooltip="This end date is in the time zone of the exchange " + 
     "where the chart's instrument trades. It doesn't use the time " + 
     "zone of the chart or of your computer.")

lineLength = 20

inTradeWindow = not useDateFilter or (time >= backtestStartDate and time < backtestEndDate)
 
isBullish(i) =>
    close[i] > open[i]
isBearish(i) => 
    close[i] < open[i]
 
isInTrade = strategy.position_size != 0
isLong = strategy.position_size > 0
isShort = strategy.position_size < 0

// Volume Spike
avgVol = ta.sma(volume, avgRange)
isVolSpike = volume / avgVol >= avgVolumeThreshold
plotshape(isVolSpike, style=shape.circle, location=location.belowbar, color=color.green, size=size.tiny)

var lastVolSpikeBar = -1
// if isVolSpike
//     lastVolSpikeBar := bar_index

barsSinceLastVolSpike = bar_index - lastVolSpikeBar
lookForEntry = barsSinceLastVolSpike <= takeTradeWithinBarCount and barsSinceLastVolSpike != 0

isCloseInsideBar() =>
    // Had this wrong initially, it was intended to be the body ie not include the wicks
    // if lookForEntry and close <= high[barsSinceLastVolSpike] and close >= low[barsSinceLastVolSpike] //EURJPY testing was done with this line
    if lookForEntry and ((isBullish(barsSinceLastVolSpike) and close <= close[barsSinceLastVolSpike] and close >= open[barsSinceLastVolSpike]) or (isBearish(barsSinceLastVolSpike) and close <= open[barsSinceLastVolSpike] and close >= close[barsSinceLastVolSpike]))
        true
    else
        false

isCloseBeyondHigh() =>
    if lookForEntry and close > high[barsSinceLastVolSpike]
        true
    else
        false

isCloseBeyondLow() =>
    if lookForEntry and close < low[barsSinceLastVolSpike]
        true
    else
        false

// Only update after comparing to last volume spike, 
// otherwise the first volume spike in a series will not be checked for an entry
if isVolSpike
    lastVolSpikeBar := bar_index

longSignal = lookForEntry and ((isBullish(0) and isCloseInsideBar()) or (isCloseBeyondHigh()))
shortSignal = lookForEntry and ((isBearish(0) and isCloseInsideBar()) or (isCloseBeyondLow()))
// It was my intention to look at the direction of the volume spike bar when a new bar closes inside but it wrecked the profit!
// longSignal = lookForEntry and ((isBearish(barsSinceLastVolSpike) and isCloseInsideBar()) or (isCloseBeyondHigh()))
// shortSignal = lookForEntry and ((isBullish(barsSinceLastVolSpike) and isCloseInsideBar()) or (isCloseBeyondLow()))

// Working OK just with this
// longSignal = lookForEntry and isCloseBeyondHigh()
// shortSignal = lookForEntry and isCloseBeyondLow()

// Bullish Trade
if (longSignal and not isInTrade)
    // if isShort
    //     strategy.cancel_all()
    //     strategy.close("Sell")

    takeProfitLevel = close + riskPoints * r2r
    stopLossLevel = close - riskPoints
    strategy.entry("Buy", strategy.long, qty)
    strategy.order("Buy take profit", strategy.short, qty, limit =  takeProfitLevel,oca_name = "Buy bracket", oca_type =  strategy.oca.cancel)
    strategy.order("Buy stop loss", strategy.short, qty, stop =  stopLossLevel, oca_name = "Buy bracket", oca_type =  strategy.oca.cancel)

    line.new(x1=bar_index, y1=open, x2=bar_index+lineLength, y2=open, color= color.blue)
    line.new(x1=bar_index, y1=takeProfitLevel, x2=bar_index+lineLength, y2=takeProfitLevel, color= color.green)
    line.new(x1=bar_index, y1=stopLossLevel, x2=bar_index+lineLength, y2=stopLossLevel, color= color.red)

// Bearish Trade
if (shortSignal and not isInTrade)
    // if isLong
    //     strategy.cancel_all()
    //     strategy.close("Buy")

    takeProfitLevel = close - riskPoints * r2r
    stopLossLevel = close + riskPoints
    strategy.entry("Sell", strategy.short, qty)
    strategy.order("Sell take profit", strategy.long, qty, limit =  takeProfitLevel,oca_name = "Sell bracket", oca_type =  strategy.oca.cancel)
    strategy.order("Sell stop loss", strategy.long, qty, stop =  stopLossLevel, oca_name = "Sell bracket", oca_type =  strategy.oca.cancel)

    line.new(x1=bar_index, y1=open, x2=bar_index+lineLength, y2=open, color= color.blue)
    line.new(x1=bar_index, y1=takeProfitLevel, x2=bar_index+lineLength, y2=takeProfitLevel, color= color.green)
    line.new(x1=bar_index, y1=stopLossLevel, x2=bar_index+lineLength, y2=stopLossLevel, color= color.red)

