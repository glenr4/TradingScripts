// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© glenrutherford4

//@version=5
indicator("Significant Candles", overlay = true)

avgPeriods = input.int(20, "Average periods", group = "Common")
showShavedOpenCandles = input.bool(1, "Show shaved open candles", group = "Shaved Open Candles")
avgRangeMultiplier = input.float(1.0, "Average range multiplier", group = "Shaved Open Candles", step = 0.1)
avgVolumeMultiplier = input.float(2.5, "Average volume multiplier", group = "Shaved Open Candles", step = 0.1)
shavedOpenWickTolerance = input.float(0.05, "Shaved open wick tolerance", group = "Shaved Open Candles", step = 0.01)
shavedOpenOppositeWickTolerance = input.float(0.10, "Shaved open opposite wick tolerance", group = "Shaved Open Candles", step = 0.01)
highlightHighWaves = input.bool(1, title="Highlight High Waves", group= "High Wave")
highWaveWickTolerance = input.float(0.6, title="Equal Wick Tolerance", group= "High Wave", step=0.1)
highWaveLargeRange = input.float(1.4, title="Large Range Multiplier", group= "High Wave", step=0.1)
maxBodyProportion = input.float(0.3, title="Maximum body proportion", group= "High Wave", step=0.1)

isBullish(offset) =>
    close[offset] > open[offset]
isBearish(i) => 
    close[i] < open[i]

hasSmallBody(int offset) =>
    fullRange = high[offset] - low[offset]
    body = math.abs(open[offset] - close[offset])

    body < fullRange * maxBodyProportion    // return value

// Shaved open candles
upperWickRange = isBullish(0) ? high - close : high - open
lowerWickRange = isBullish(0) ? open - low : close - low
candleRange = high - low
avgRange = ta.sma(candleRange, avgPeriods)
isLargeRange = candleRange >= avgRange * avgRangeMultiplier

avgVolume = ta.sma(volume, avgPeriods)
isHighVolume = volume >= avgVolume * avgVolumeMultiplier

isShavedOpenBullishCandle = isBullish(0) and lowerWickRange/candleRange <= shavedOpenWickTolerance and upperWickRange/candleRange <= shavedOpenOppositeWickTolerance and isLargeRange and isHighVolume
isShavedOpenBearishCandle = isBearish(0) and upperWickRange/candleRange <= shavedOpenWickTolerance and lowerWickRange/candleRange <= shavedOpenOppositeWickTolerance and isLargeRange and isHighVolume

plotshape(isShavedOpenBullishCandle, style=shape.xcross, location=location.belowbar, color=color.yellow, size=size.tiny)
plotshape(isShavedOpenBearishCandle, style=shape.xcross, location=location.abovebar, color=color.yellow, size=size.tiny)

// High volume
barcolor(isHighVolume and isBullish(0) ? color.green : na)
barcolor(isHighVolume and isBearish(0) ? color.red : na)

// Highwave
highWaveColour = color.rgb(12, 216, 243, 50)

topWickSize = high - math.max(open, close)
bottomWickSize = math.min(open, close) - low
areEqualWicks = math.abs(topWickSize - bottomWickSize)/topWickSize < highWaveWickTolerance
largeRange = high - low >= avgRange * highWaveLargeRange

isHighWave = hasSmallBody(0) and areEqualWicks and largeRange

if(isHighWave and highlightHighWaves)
    box.new(bar_index-1, high, bar_index+1, low, bgcolor=highWaveColour, border_color=highWaveColour)